{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","handleClear","setState","handleSelect","good","this","className","type","onClick","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,YAAc,kBAAM,EAAKC,SAAS,CAAEF,aAAc,MALpD,EAOEG,aAAe,SAACC,GAAD,OACb,EAAKL,MAAMC,eAAiBI,EACxB,EAAKF,SAAS,CAAEF,aAAc,KAC9B,EAAKE,SAAS,CAAEF,aAAcI,KAVtC,4CAaE,WAAU,IAAD,OACCJ,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,UACoB,KAAjBN,EACG,oBAAIM,UAAU,QAAd,+BAEA,qBAAIA,UAAU,sCAAd,oBACMN,EADN,gBAGE,wBACE,UAAQ,cACRO,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKJ,iBAItB,uBAAOK,UAAU,QAAjB,SACE,gCACGT,EAAMY,KAAI,SAACL,GAAD,OACT,qBACE,UAAQ,OAERE,UAAWI,IACT,GAAI,CACF,+BAAgCV,IAAiBI,IALvD,UASE,6BACE,wBACE,UACGJ,IAAiBI,EACd,eACA,YAENG,KAAK,SACLD,UAAWI,IACT,SACA,CACE,UAAWV,IAAiBI,IAGhCI,QAAS,kBAAM,EAAKL,aAAaC,IAbnC,SAeGJ,IAAiBI,EACd,IACA,QAGR,oBAAI,UAAQ,YAAYE,UAAU,eAAlC,SACGF,MA7BEA,iBArCrB,GAAyBO,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.24754395.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  handleClear = () => this.setState({ selectedGood: '' });\n\n  handleSelect = (good: string) => (\n    this.state.selectedGood === good\n      ? this.setState({ selectedGood: '' })\n      : this.setState({ selectedGood: good })\n  );\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {selectedGood === ''\n          ? <h1 className=\"title\">No goods selected</h1>\n          : (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={this.handleClear}\n              />\n            </h1>\n          )}\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => (\n              <tr\n                data-cy=\"Good\"\n                key={good}\n                className={classNames(\n                  '', {\n                    'has-background-success-light': selectedGood === good,\n                  },\n                )}\n              >\n                <td>\n                  <button\n                    data-cy={\n                      (selectedGood === good)\n                        ? 'RemoveButton'\n                        : 'AddButton'\n                    }\n                    type=\"button\"\n                    className={classNames(\n                      'button',\n                      {\n                        'is-info': selectedGood === good,\n                      },\n                    )}\n                    onClick={() => this.handleSelect(good)}\n                  >\n                    {selectedGood === good\n                      ? '-'\n                      : '+'}\n                  </button>\n                </td>\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}